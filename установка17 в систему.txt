**********************************************************************
** Visual Studio 2022 Developer Command Prompt v17.13.6
** Copyright (c) 2022 Microsoft Corporation
**********************************************************************

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>pip

Usage:
  pip <command> [options]

Commands:
  install                     Install packages.
  lock                        Generate a lock file.
  download                    Download packages.
  uninstall                   Uninstall packages.
  freeze                      Output installed packages in requirements format.
  inspect                     Inspect the python environment.
  list                        List installed packages.
  show                        Show information about installed packages.
  check                       Verify installed packages have compatible dependencies.
  config                      Manage local and global configuration.
  search                      Search PyPI for packages.
  cache                       Inspect and manage pip's wheel cache.
  index                       Inspect information available from package indexes.
  wheel                       Build wheels from your requirements.
  hash                        Compute hashes of package archives.
  completion                  A helper command used for command completion.
  debug                       Show information useful for debugging.
  help                        Show help for commands.

General Options:
  -h, --help                  Show help.
  --debug                     Let unhandled exceptions propagate outside the main subroutine, instead of logging them
                              to stderr.
  --isolated                  Run pip in an isolated mode, ignoring environment variables and user configuration.
  --require-virtualenv        Allow pip to only run in a virtual environment; exit with an error otherwise.
  --python <python>           Run pip with the specified Python interpreter.
  -v, --verbose               Give more output. Option is additive, and can be used up to 3 times.
  -V, --version               Show version and exit.
  -q, --quiet                 Give less output. Option is additive, and can be used up to 3 times (corresponding to
                              WARNING, ERROR, and CRITICAL logging levels).
  --log <path>                Path to a verbose appending log.
  --no-input                  Disable prompting for input.
  --keyring-provider <keyring_provider>
                              Enable the credential lookup via the keyring library if user input is allowed. Specify
                              which mechanism to use [auto, disabled, import, subprocess]. (default: auto)
  --proxy <proxy>             Specify a proxy in the form scheme://[user:passwd@]proxy.server:port.
  --retries <retries>         Maximum attempts to establish a new HTTP connection. (default: 5)
  --timeout <sec>             Set the socket timeout (default 15 seconds).
  --exists-action <action>    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup,
                              (a)bort.
  --trusted-host <hostname>   Mark this host or host:port pair as trusted, even though it does not have valid or any
                              HTTPS.
  --cert <path>               Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See 'SSL
                              Certificate Verification' in pip documentation for more information.
  --client-cert <path>        Path to SSL client certificate, a single file containing the private key and the
                              certificate in PEM format.
  --cache-dir <dir>           Store the cache data in <dir>.
  --no-cache-dir              Disable the cache.
  --disable-pip-version-check
                              Don't periodically check PyPI to determine whether a new version of pip is available for
                              download. Implied with --no-index.
  --no-color                  Suppress colored output.
  --use-feature <feature>     Enable new functionality, that may be backward incompatible.
  --use-deprecated <feature>  Enable deprecated functionality, that will be removed in the future.
  --resume-retries <resume_retries>
                              Maximum attempts to resume or restart an incomplete download. (default: 0)

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>pip freeze
distlib==0.3.9
face_recognition_models==0.3.0
filelock==3.18.0
numpy==2.2.5
opencv-python==4.11.0.86
platformdirs==4.3.7
virtualenv==20.30.0

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>pip insrall face_recognition
ERROR: unknown command "insrall" - maybe you meant "install"

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>pip insall face_recognition
ERROR: unknown command "insall" - maybe you meant "install"

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>pip install face_recognition
Collecting face_recognition
  Using cached face_recognition-1.3.0-py2.py3-none-any.whl.metadata (21 kB)
Requirement already satisfied: face-recognition-models>=0.3.0 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (0.3.0)
Collecting Click>=6.0 (from face_recognition)
  Using cached click-8.1.8-py3-none-any.whl.metadata (2.3 kB)
Collecting dlib>=19.7 (from face_recognition)
  Using cached dlib-19.24.8.tar.gz (3.4 MB)
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Preparing metadata (pyproject.toml) ... done
Requirement already satisfied: numpy in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (2.2.5)
Collecting Pillow (from face_recognition)
  Using cached pillow-11.2.1-cp312-cp312-win_amd64.whl.metadata (9.1 kB)
Collecting colorama (from Click>=6.0->face_recognition)
  Using cached colorama-0.4.6-py2.py3-none-any.whl.metadata (17 kB)
Using cached face_recognition-1.3.0-py2.py3-none-any.whl (15 kB)
Using cached click-8.1.8-py3-none-any.whl (98 kB)
Using cached colorama-0.4.6-py2.py3-none-any.whl (25 kB)
Using cached pillow-11.2.1-cp312-cp312-win_amd64.whl (2.7 MB)
Building wheels for collected packages: dlib
  Building wheel for dlib (pyproject.toml) ... done
  Created wheel for dlib: filename=dlib-19.24.8-cp312-cp312-win32.whl size=2928034 sha256=417740e44ca6977720b90793b9358f965a39dc1b1e9d1b50070d4bf3993ba449
  Stored in directory: c:\users\tanyash25\appdata\local\pip\cache\wheels\45\47\c4\f5c2cf6f3b4ab4f558f27375101ead0ef7f1861d5aa54f5f8c
Successfully built dlib
Installing collected packages: dlib, Pillow, colorama, Click, face_recognition
Successfully installed Click-8.1.8 Pillow-11.2.1 colorama-0.4.6 dlib-19.24.8 face_recognition-1.3.0

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>pip freeze
click==8.1.8
colorama==0.4.6
distlib==0.3.9
dlib==19.24.8
face-recognition==1.3.0
face_recognition_models==0.3.0
filelock==3.18.0
numpy==2.2.5
opencv-python==4.11.0.86
pillow==11.2.1
platformdirs==4.3.7
virtualenv==20.30.0

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>py
Python 3.13.3 (tags/v3.13.3:6280bb5, Apr  8 2025, 14:47:33) [MSC v.1943 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import face_recognition
Traceback (most recent call last):
  File "<python-input-0>", line 1, in <module>
    import face_recognition
ModuleNotFoundError: No module named 'face_recognition'
>>> import face-recognition
  File "<python-input-1>", line 1
    import face-recognition
               ^
SyntaxError: invalid syntax
>>> exit()

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>py3.8
"py3.8" не является внутренней или внешней
командой, исполняемой программой или пакетным файлом.

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>python
Python 3.12.10 (tags/v3.12.10:0cc8128, Apr  8 2025, 12:21:36) [MSC v.1943 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> exit()

C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools>py -3.8
Python 3.8.1rc1 (tags/v3.8.1rc1:b00a2b5, Dec 10 2019, 01:13:53) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import face_recognition
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'face_recognition'
>>>