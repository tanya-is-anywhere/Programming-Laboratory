Windows PowerShell
(C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.

Установите последнюю версию PowerShell для новых функций и улучшения! https://aka.ms/PSWindows

PS C:\Users\tanyash25> pip freeze
click==8.1.8
colorama==0.4.6
distlib==0.3.9
dlib==19.24.8
face-recognition==1.3.0
face_recognition_models==0.3.0
filelock==3.18.0
numpy==2.2.5
opencv-python==4.11.0.86
pillow==11.2.1
platformdirs==4.3.7
virtualenv==20.30.0
PS C:\Users\tanyash25> py
Python 3.13.3 (tags/v3.13.3:6280bb5, Apr  8 2025, 14:47:33) [MSC v.1943 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> help
Welcome to Python 3.13's help utility! If this is your first time using
Python, you should definitely check out the tutorial at
https://docs.python.org/3.13/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To get a list of available
modules, keywords, symbols, or topics, enter "modules", "keywords",
"symbols", or "topics".

Each module also comes with a one-line summary of what it does; to list
the modules whose name or summary contain a given string such as "spam",
enter "modules spam".

To quit this help utility and return to the interpreter,
enter "q", "quit" or "exit".

help> modules

Please wait a moment while I gather a list of all available modules...

test_sqlite3: testing with SQLite version 3.49.1
__future__          _string             faulthandler        reprlib
__hello__           _strptime           filecmp             rlcompleter
__phello__          _struct             fileinput           runpy
_abc                _suggestions        fnmatch             sched
_aix_support        _symtable           fractions           secrets
_android_support    _sysconfig          ftplib              select
_apple_support      _testbuffer         functools           selectors
_ast                _testcapi           gc                  shelve
_asyncio            _testclinic         genericpath         shlex
_bisect             _testclinic_limited getopt              shutil
_blake2             _testconsole        getpass             signal
_bz2                _testimportmultiple gettext             site
_codecs             _testinternalcapi   glob                smtplib
_codecs_cn          _testlimitedcapi    graphlib            socket
_codecs_hk          _testmultiphase     gzip                socketserver
_codecs_iso2022     _testsinglephase    hashlib             sqlite3
_codecs_jp          _thread             heapq               sre_compile
_codecs_kr          _threading_local    hmac                sre_constants
_codecs_tw          _tkinter            html                sre_parse
_collections        _tokenize           http                ssl
_collections_abc    _tracemalloc        idlelib             stat
_colorize           _typing             imaplib             statistics
_compat_pickle      _uuid               importlib           string
_compression        _warnings           inspect             stringprep
_contextvars        _weakref            io                  struct
_csv                _weakrefset         ipaddress           subprocess
_ctypes             _winapi             itertools           symtable
_ctypes_test        _wmi                json                sys
_datetime           _zoneinfo           keyword             sysconfig
_decimal            abc                 linecache           tabnanny
_elementtree        antigravity         locale              tarfile
_functools          argparse            logging             tempfile
_hashlib            array               lzma                test
_heapq              ast                 mailbox             textwrap
_imp                asyncio             marshal             this
_interpchannels     atexit              math                threading
_interpqueues       base64              mimetypes           time
_interpreters       bdb                 mmap                timeit
_io                 binascii            modulefinder        tkinter
_ios_support        bisect              msvcrt              token
_json               builtins            multiprocessing     tokenize
_locale             bz2                 netrc               tomllib
_lsprof             cProfile            nt                  trace
_lzma               calendar            ntpath              traceback
_markupbase         cmath               nturl2path          tracemalloc
_md5                cmd                 numbers             tty
_multibytecodec     code                opcode              turtle
_multiprocessing    codecs              operator            turtledemo
_opcode             codeop              optparse            types
_opcode_metadata    collections         os                  typing
_operator           colorsys            pathlib             unicodedata
_osx_support        compileall          pdb                 unittest
_overlapped         concurrent          pickle              urllib
_pickle             configparser        pickletools         uuid
_py_abc             contextlib          pip                 venv
_pydatetime         contextvars         pkgutil             warnings
_pydecimal          copy                platform            wave
_pyio               copyreg             plistlib            weakref
_pylong             csv                 poplib              webbrowser
_pyrepl             ctypes              posixpath           winreg
_queue              curses              pprint              winsound
_random             dataclasses         profile             wsgiref
_sha1               datetime            pstats              xml
_sha2               dbm                 pty                 xmlrpc
_sha3               decimal             py_compile          xxsubtype
_signal             difflib             pyclbr              zipapp
_sitebuiltins       dis                 pydoc               zipfile
_socket             doctest             pydoc_data          zipimport
_sqlite3            email               pyexpat             zlib
_sre                encodings           queue               zoneinfo
_ssl                ensurepip           quopri
_stat               enum                random
_statistics         errno               re

Enter any module name to get more help.  Or, type "modules spam" to search
for modules whose name or summary contain the string "spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> exit()
PS C:\Users\tanyash25> python --version3.8
unknown option --version3.8
usage: C:\Users\tanyash25\AppData\Local\Programs\Python\Python312\python.exe [option] ... [-c cmd | -m mod | file | -] [arg] ...
Try `python -h' for more information.
PS C:\Users\tanyash25> python --version
Python 3.12.10
PS C:\Users\tanyash25> python
Python 3.12.10 (tags/v3.12.10:0cc8128, Apr  8 2025, 12:21:36) [MSC v.1943 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> py
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'py' is not defined
>>> exit()
PS C:\Users\tanyash25> py3.8
py3.8 : Имя "py3.8" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность написания имени, а также на
личие и правильность пути, после чего повторите попытку.
строка:1 знак:1
+ py3.8
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (py3.8:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\tanyash25> py -3.8
Python 3.8.1rc1 (tags/v3.8.1rc1:b00a2b5, Dec 10 2019, 01:13:53) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 3.8's help utility!

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at https://docs.python.org/3.8/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, symbols, or topics, type
"modules", "keywords", "symbols", or "topics".  Each module also comes
with a one-line summary of what it does; to list the modules whose name
or summary contain a given string such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> import face_recognition
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'face_recognition'
>>> import face-recognition
  File "<stdin>", line 1
    import face-recognition
               ^
SyntaxError: invalid syntax
>>> import face recognition
  File "<stdin>", line 1
    import face recognition
                ^
SyntaxError: invalid syntax
>>> exit()
PS C:\Users\tanyash25> cd Desktop\FaceRecognition
PS C:\Users\tanyash25\Desktop\FaceRecognition> pip freeze
click==8.1.8
colorama==0.4.6
distlib==0.3.9
dlib==19.24.8
face-recognition==1.3.0
face_recognition_models==0.3.0
filelock==3.18.0
numpy==2.2.5
opencv-python==4.11.0.86
pillow==11.2.1
platformdirs==4.3.7
virtualenv==20.30.0
PS C:\Users\tanyash25\Desktop\FaceRecognition> face-recognition
face-recognition : Имя "face-recognition" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность напис
ания имени, а также наличие и правильность пути, после чего повторите попытку.
строка:1 знак:1
+ face-recognition
+ ~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (face-recognition:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\tanyash25\Desktop\FaceRecognition> pip install face_recognition
Requirement already satisfied: face_recognition in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (1.3.0)
Requirement already satisfied: face-recognition-models>=0.3.0 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (0.3.0)
Requirement already satisfied: Click>=6.0 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (8.1.8)
Requirement already satisfied: dlib>=19.7 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (19.24.8)
Requirement already satisfied: numpy in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (2.2.5)
Requirement already satisfied: Pillow in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (11.2.1)
Requirement already satisfied: colorama in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from Click>=6.0->face_recognition) (0.4.6)
PS C:\Users\tanyash25\Desktop\FaceRecognition> import sys
import : Имя "import" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность написания имени, а также
наличие и правильность пути, после чего повторите попытку.
строка:1 знак:1
+ import sys
+ ~~~~~~
    + CategoryInfo          : ObjectNotFound: (import:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\tanyash25\Desktop\FaceRecognition> print(sys.executable)
sys.executable : Имя "sys.executable" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность написания
 имени, а также наличие и правильность пути, после чего повторите попытку.
строка:1 знак:7
+ print(sys.executable)
+       ~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (sys.executable:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\tanyash25\Desktop\FaceRecognition> print(sys.version)
sys.version : Имя "sys.version" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность написания имени
, а также наличие и правильность пути, после чего повторите попытку.
строка:1 знак:7
+ print(sys.version)
+       ~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (sys.version:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\tanyash25\Desktop\FaceRecognition> py
Python 3.13.3 (tags/v3.13.3:6280bb5, Apr  8 2025, 14:47:33) [MSC v.1943 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> exit()
PS C:\Users\tanyash25\Desktop\FaceRecognition> py -3.8
Python 3.8.1rc1 (tags/v3.8.1rc1:b00a2b5, Dec 10 2019, 01:13:53) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> print(sys.executable)
C:\Users\tanyash25\AppData\Local\Programs\Python\Python38\python.exe
>>> print(sys.version)
3.8.1rc1 (tags/v3.8.1rc1:b00a2b5, Dec 10 2019, 01:13:53) [MSC v.1916 64 bit (AMD64)]
>>> python -m pip install face_recognition
  File "<stdin>", line 1
    python -m pip install face_recognition
              ^
SyntaxError: invalid syntax
>>> exit()
PS C:\Users\tanyash25\Desktop\FaceRecognition> python -m pip install face_recognition
Requirement already satisfied: face_recognition in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (1.3.0)
Requirement already satisfied: face-recognition-models>=0.3.0 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (0.3.0)
Requirement already satisfied: Click>=6.0 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (8.1.8)
Requirement already satisfied: dlib>=19.7 in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (19.24.8)
Requirement already satisfied: numpy in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (2.2.5)
Requirement already satisfied: Pillow in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from face_recognition) (11.2.1)
Requirement already satisfied: colorama in c:\users\tanyash25\pycharmprojects\face_recognition\.venv\lib\site-packages (from Click>=6.0->face_recognition) (0.4.6)
PS C:\Users\tanyash25\Desktop\FaceRecognition> C:\Users\tanyash25\AppData\Local\Programs\Python\Python38\python.exe -m pip install face_recognition
Collecting face_recognition
  Downloading https://files.pythonhosted.org/packages/1e/95/f6c9330f54ab07bfa032bf3715c12455a381083125d8880c43cbe76bb3d0/face_recognition-1.3.0-py2.py3-none-any.whl
Collecting numpy (from face_recognition)
  Downloading https://files.pythonhosted.org/packages/69/65/0d47953afa0ad569d12de5f65d964321c208492064c38fe3b0b9744f8d44/numpy-1.24.4-cp38-cp38-win_amd64.whl (14.9MB)
     |████████████████████████████████| 14.9MB 2.2MB/s
Collecting face-recognition-models>=0.3.0 (from face_recognition)
  Downloading https://files.pythonhosted.org/packages/cf/3b/4fd8c534f6c0d1b80ce0973d01331525538045084c73c153ee6df20224cf/face_recognition_models-0.3.0.tar.gz (100.1MB)
     |████████████████████████████████| 100.2MB 726kB/s
Collecting Pillow (from face_recognition)
  Downloading https://files.pythonhosted.org/packages/f2/75/3cb820b2812405fc7feb3d0deb701ef0c3de93dc02597115e00704591bc9/pillow-10.4.0-cp38-cp38-win_amd64.whl (2.6MB)
     |████████████████████████████████| 2.6MB 819kB/s
Collecting Click>=6.0 (from face_recognition)
  Downloading https://files.pythonhosted.org/packages/7e/d4/7ebdbd03970677812aac39c869717059dbb71a4cfc033ca6e5221787892c/click-8.1.8-py3-none-any.whl (98kB)
     |████████████████████████████████| 102kB 1.1MB/s
Collecting dlib>=19.7 (from face_recognition)
  Downloading https://files.pythonhosted.org/packages/14/4c/8444567b0b82b0c146fd746f96751ffc7feb25e5ed628c35b88b9673c2ff/dlib-19.24.8.tar.gz (3.4MB)
     |████████████████████████████████| 3.4MB 939kB/s
Collecting colorama; platform_system == "Windows" (from Click>=6.0->face_recognition)
  Downloading https://files.pythonhosted.org/packages/d1/d6/3965ed04c63042e047cb6a3e6ed1a63a35087b6a609aa3a15ed8ac56c221/colorama-0.4.6-py2.py3-none-any.whl
Installing collected packages: numpy, face-recognition-models, Pillow, colorama, Click, dlib, face-recognition
  Running setup.py install for face-recognition-models ... done
  Running setup.py install for dlib ... done
Successfully installed Click-8.1.8 Pillow-10.4.0 colorama-0.4.6 dlib-19.24.8 face-recognition-1.3.0 face-recognition-models-0.3.0 numpy-1.24.4
WARNING: You are using pip version 19.2.3, however version 25.0.1 is available.
You should consider upgrading via the 'python -m pip install --upgrade pip' command.
PS C:\Users\tanyash25\Desktop\FaceRecognition> pip freeze
click==8.1.8
colorama==0.4.6
distlib==0.3.9
dlib==19.24.8
face-recognition==1.3.0
face_recognition_models==0.3.0
filelock==3.18.0
numpy==2.2.5
opencv-python==4.11.0.86
pillow==11.2.1
platformdirs==4.3.7
virtualenv==20.30.0
PS C:\Users\tanyash25\Desktop\FaceRecognition> py -3.8
Python 3.8.1rc1 (tags/v3.8.1rc1:b00a2b5, Dec 10 2019, 01:13:53) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import face_recognition
>>> known_image = face_recognition.load_image_file("C:\Users\tanyash25\Desktop\FR_pic\SashaSpilberg.jpg")
  File "<stdin>", line 1
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape
>>> known_image = face_recognition.load_image_file("SashaSpilberg.jpg")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\tanyash25\AppData\Local\Programs\Python\Python38\lib\site-packages\face_recognition\api.py", line 86, in load_image_file
    im = PIL.Image.open(file)
  File "C:\Users\tanyash25\AppData\Local\Programs\Python\Python38\lib\site-packages\PIL\Image.py", line 3431, in open
    fp = builtins.open(filename, "rb")
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\tanyash25\\Desktop\\FaceRecognition\\SashaSpilberg.jpg'
>>> known_image = face_recognition.load_image_file("C:\\Users\\tanyash25\\Desktop\\FaceRecognition\\SashaSpilberg.jpg")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\tanyash25\AppData\Local\Programs\Python\Python38\lib\site-packages\face_recognition\api.py", line 86, in load_image_file
    im = PIL.Image.open(file)
  File "C:\Users\tanyash25\AppData\Local\Programs\Python\Python38\lib\site-packages\PIL\Image.py", line 3431, in open
    fp = builtins.open(filename, "rb")
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\tanyash25\\Desktop\\FaceRecognition\\SashaSpilberg.jpg'
>>> known_image = face_recognition.load_image_file(r"C:\Users\tanyash25\Desktop\FR_pic\SashaSpilberg.jpg")
>>> unknown_image = face_recognition.load_image_file((r"C:\Users\tanyash25\Desktop\FR_pic\unknown.jpg")
...
... )
>>> unknown_image = face_recognition.load_image_file(r"C:\Users\tanyash25\Desktop\FR_pic\unknown.jpg")
>>> known_encoding = face_recognition.face_encodings(known_image)[0]
>>> unknown_encoding = face_recognition.face_encodings(unknown_image)[0]
>>> print(
KeyboardInterrupt
>>> print(known_encoding)
[-0.16469249  0.03918909  0.11119196 -0.04281167 -0.1140302  -0.08395482
 -0.07411108 -0.02843051  0.08648693 -0.13588572  0.1665532  -0.02035983
 -0.22326511 -0.04234553 -0.08142454  0.22408046 -0.13524932 -0.17664133
 -0.08393587 -0.04741943  0.0908388   0.06478707  0.11194316  0.09428855
 -0.13077916 -0.31925595 -0.05550986 -0.06100355 -0.13443552 -0.06465495
  0.07623624  0.12563004 -0.09478123  0.08655902  0.01118898  0.12380432
 -0.06140633 -0.10724314  0.2338029   0.06739675 -0.32357135  0.00119849
  0.05582778  0.32009563  0.24359146 -0.06426556  0.05991566 -0.0213245
  0.15891987 -0.43452376 -0.0150377   0.18580322  0.01719984  0.01149276
  0.16021739 -0.10247005  0.06395162  0.18475166 -0.14239827  0.02590656
 -0.00750344 -0.15967874  0.00356875 -0.15989025  0.21642306  0.15954047
 -0.1857297  -0.13229068  0.19951035 -0.16476609 -0.11574683  0.18432605
 -0.12182973 -0.2063164  -0.2892195  -0.02469686  0.38936868  0.15461227
 -0.10935501  0.11159074 -0.03588769  0.01709566 -0.08950663  0.24770015
 -0.04752637  0.07167663 -0.122102   -0.03875223  0.17358497 -0.01372049
 -0.01581669  0.32195774  0.04646224  0.00937859  0.06369326  0.03848332
 -0.09508869 -0.06399109 -0.12614584 -0.0172403  -0.04470804 -0.14438176
 -0.03455427  0.03408146 -0.16777056  0.1829927  -0.13940454  0.02924478
 -0.07581827 -0.02069225  0.00727083  0.07620046  0.08404326 -0.26862392
  0.09529874  0.16697897  0.05748159  0.15792748  0.10091447  0.08927614
 -0.06410397 -0.04677516 -0.1544507  -0.07600446  0.01163302 -0.05223491
 -0.01444367  0.06947773]
>>> print(unknown_encoding)
[-0.17531776  0.09315665  0.07326245 -0.05045883 -0.13837767 -0.04328378
 -0.06086987 -0.0191934   0.11103499 -0.059483    0.16481523 -0.05742892
 -0.26818317  0.03385788 -0.09641652  0.23301208 -0.09802547 -0.12269844
 -0.13635463 -0.05301201  0.02531264  0.12934715  0.03952518  0.1230346
 -0.10125986 -0.30825052 -0.04517977 -0.07646503 -0.18648347 -0.07681965
  0.02350434  0.13978001 -0.09673053  0.00086533  0.03476926  0.10541763
 -0.06410772 -0.11447339  0.2436796   0.11091819 -0.26735002 -0.00571935
  0.13190167  0.34802991  0.24134611 -0.04363757  0.06848724 -0.04967681
  0.17103732 -0.37317541 -0.03367517  0.21887268  0.02200412  0.03733326
  0.14556438 -0.11985666  0.0560431   0.17995776 -0.16635604 -0.00244488
  0.04308293 -0.0457839   0.00278675 -0.15831162  0.23601305  0.11500233
 -0.16250123 -0.10283957  0.2125528  -0.13579288 -0.11634244  0.15738924
 -0.1735622  -0.25982979 -0.27997082  0.02225111  0.38174894  0.17083763
 -0.08984664  0.10445753 -0.04835426 -0.07076307 -0.07349262  0.18240298
 -0.0156386   0.04352959 -0.07882245  0.01136246  0.24576396  0.02362051
  0.02315687  0.30514368  0.07145233 -0.06806763  0.03839525  0.07156887
 -0.10125944 -0.0594883  -0.17802812  0.00116037 -0.05359097 -0.11384435
 -0.03228279  0.0485209  -0.21489358  0.16700009 -0.08479331 -0.01349578
 -0.15292849 -0.08045323 -0.03191503  0.11653642  0.16964424 -0.21736583
  0.07954972  0.10584984  0.05380546  0.11825048  0.08243423  0.05692351
 -0.04261117 -0.07083853 -0.18623918 -0.11058903  0.0638481  -0.05223381
  0.02363999  0.08218423]
>>> results = face_recognition.compare_faces([known_encoding], unknown_encoding)
>>> print(results)
[True]
>>> unknown_image2 = face_recognition.load_image_file((r"C:\Users\tanyash25\Desktop\FR_pic\MariCraimberi.jpg")
... )
>>> unknown_image2 = face_recognition.load_image_file(r"C:\Users\tanyash25\Desktop\FR_pic\MariCraimberi.jpg")
>>> unknown_encoding = face_recognition.face_encodings(unknown_image2)[0]
>>> print(unknown_encoding)
[-0.06917394  0.08083515  0.06546548 -0.00113627 -0.14826731  0.02510533
 -0.00770043 -0.0682425   0.2175806  -0.10754426  0.0779061  -0.0757336
 -0.201105    0.16503575 -0.10330624  0.15295377 -0.09293795 -0.18092395
 -0.0769537  -0.05918758  0.01670538  0.00957286 -0.06017944  0.12455916
 -0.08395794 -0.30521497 -0.03793058 -0.03072896 -0.07567088 -0.09233924
  0.07131088  0.18646351 -0.21172854  0.00846382 -0.05329792  0.05491223
 -0.04829583 -0.08889145  0.17881507  0.06785468 -0.25169981  0.02825076
  0.05892351  0.36727205  0.16437875  0.04871216  0.01374065 -0.04836182
  0.07498386 -0.32424188  0.00641304  0.2229684  -0.00583202  0.08740822
  0.01038268 -0.16582838  0.05440626  0.04189445 -0.12947041  0.11341745
  0.08330704 -0.05826733  0.04524584 -0.13346423  0.27868769  0.09942504
 -0.09940751 -0.04694232  0.14951044 -0.18588327 -0.0912931   0.06699552
 -0.16010734 -0.23826885 -0.28285572  0.02850778  0.45172563  0.17624207
 -0.11944886  0.05400663 -0.05347432  0.00155337  0.05419126  0.2371498
  0.02604697 -0.03609041 -0.02600829  0.05255862  0.28658745  0.0235735
 -0.08237498  0.25136253  0.03798814 -0.12531133 -0.06812764  0.07303275
 -0.04354227 -0.01754286 -0.16462339 -0.0138002  -0.06482621  0.02007952
 -0.07234132  0.12559763 -0.24231596  0.19010149 -0.00855759 -0.01331908
 -0.03792267  0.03401067 -0.07338881  0.00200919  0.17159021 -0.24271438
  0.13512582  0.1737085   0.05788688  0.12812169 -0.00826016  0.10622314
  0.03418521 -0.03768545 -0.1705161  -0.08623794  0.04925129 -0.01624254
 -0.01713601  0.08761932]
>>> results = face_recognition.compare_faces([known_encoding], unknown_encoding)
>>> print(results)
[False]
>>>